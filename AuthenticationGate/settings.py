"""
Django settings for AuthenticationGate project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-rhba7a+-k^_u&cg=co9a-lj0)27kgxzs!an$u3u)=b2a36nyy^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# COOKIES
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = "None"
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = "None"
CSRF_COOKIE_SECURE = True


# Application definition

INSTALLED_APPS = [
    'accounts',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'oidc_provider',
]


if 'oidc_provider' in INSTALLED_APPS:
    from . oidc_provider_settings import DOMAIN, OIDCOP_CONFIG, OIDC_URL_PREFIX, PORT
    OIDCOP_CONF_FILE = f"{BASE_DIR}/oidc_provider_settings.py"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AuthenticationGate.urls'

AUTH_USER_MODEL = "accounts.User"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'oidc_provider/templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AuthenticationGate.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'data/static')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'filters': {
        'filter_info_level': {
            '()': 'AuthenticationGate.logger_filter.FilterLevels',
            'filter_levels': ['INFO']
        },
        'filter_error_level': {
            '()': 'AuthenticationGate.logger_filter.FilterLevels',
            'filter_levels': ['ERROR']
        },
        'filter_warning_level': {
            '()': 'AuthenticationGate.logger_filter.FilterLevels',
            'filter_levels': ['WARNING']
        },
        'filter_request': {
            '()': 'AuthenticationGate.logger_filter.FilterRequest',
        }

    },
    'formatters': {
        'info-formatter': {
            'format': '%(levelname)s : %(asctime)s %(message)s ',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'error-formatter': {
            'format': '%(levelname)s : %(asctime)s {%(module)s}\
           [  %(funcName)s] %(message)s- [in %(pathname)s:%(lineno)d]',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'warning-formatter': {
            'format': '%(levelname)s : %(asctime)s  %(message)s - [in %(pathname)s:%(lineno)d]',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        }
    },
    'handlers': {
        'console_info': {
            'class': 'logging.StreamHandler',
            'formatter': 'info-formatter',
            'filters': ['filter_info_level']
        },
        'console_error': {
            'class': 'logging.StreamHandler',
            'formatter': 'error-formatter',
            'filters': ['filter_error_level']
        },
        'console_warning': {
            'class': 'logging.StreamHandler',
            'formatter': 'warning-formatter',
            'filters': ['filter_warning_level']
        },
        'django_file': {
            'class': 'logging.FileHandler',
            'filename': './logs/AuthenticationGate.log',
            'filters': ['filter_request'],
            'formatter': 'info-formatter',
        }
    },

    'loggers': {
        'django': {
            'handlers': ['django_file', 'console_info', 'console_error', 'console_warning'],
            'propagate': True,
            'level': 'INFO',
        }
    }
}

